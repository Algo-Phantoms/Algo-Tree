// N Queen Problem by backtracking //
/* n queen problem we have to place N queen in N * N chessboard  .So that no two queens are notin conquering position(The chess queens can attack in any direction as horizontal, vertical and diagonal way )i.e no 2 queen is in same diagonal or same row or same column.
Also in n queen problem there is constraint that ith queen is placed in ith row like 1 queen is placed in row 1.
+/
#include<stdio.h>
#include<math.h>
#include<stdlib.h>
int Place(int k,int l,int x[])
{
 for(int i=1;i<k;i++)
 {
 	if((x[i]==l)||(abs(x[i]-l))==abs(i-k))
 	{
 		return 0;
	}
}
	 
	 return 1;
 	
}
void nQueen (int k,int n,int x[])
{
	int l;
	for( l=1;l<=n;l++)
	{
		if(Place(k,l,x))
		{
			x[k]=l;
			if(k==n)
			{
			for(int i=1;i<=n;i++)
			{
				printf(" %d",x[i]);
			}
			printf("\n");	
			  
				
			}
			else
			    nQueen(k+1,n,x);
		}
	}
}

int main()
{
	int n;
	int x[100];
 printf("Enter no of queens\n");
 scanf("%d",&n)	;
 printf("Solution are\n");
 nQueen(1,n,x);
 
}
/* Output
Enter no of queens
4
Solution are
 2 4 1 3
 3 1 4 2
*/
